{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,UACjCC,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,GAAWR,EAAQS,SAExC,IAAIC,EAAiB,EACjBC,EAAe,EAkCnB,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,IAWxC,SAAwBC,GACtBA,EACGC,MAAK,EAACN,SAAEA,EAAUV,MAAAiB,KACjBC,EAAAvB,GAASwB,OAAOC,QAAQ,qBAAqBV,QAAeO,MAAW,CACrEI,QAAS,QAGZC,OAAM,EAACZ,SAAEA,EAAUV,MAAAuB,KAClBL,EAAAvB,GAASwB,OAAOK,QAAQ,oBAAoBd,QAAea,MAAW,CACpEF,QAAS,O,CAZfI,CAPgB,IAAIC,SAAQ,CAACC,EAASC,KAChChB,EACFe,EAAQ,C,SAAEjB,EAAUV,MAAAW,IAEpBiB,EAAO,C,SAAElB,EAAUV,MAAAW,GAAQ,I,CAtCjCd,EAAQgC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAAWC,OAAOhC,EAAMiC,OACxBC,EAAUF,OAAO9B,EAAK+B,OACtBE,EAAYH,OAAO5B,EAAO6B,OAChC1B,EAAewB,EAIMK,EAHPL,EAGcM,EAHJH,EAGUI,EAHDH,EAIjCI,YAAW,KACT,GAAe,IAAXD,EACF,OAEF9B,EAAcF,EAAgBC,GAE9B,MAAMiC,EAAaC,aAAY,KAC7B,GAAInC,IAAmBgC,EAIrB,OAHAI,cAAcF,GACdlC,EAAiB,OACjBC,EAAe,GAGjBD,GAAkB,EAClBC,GAAgB8B,EAChB7B,EAAcF,EAAgBC,EAAa,GAC1C8B,EAAK,GACPD,GAlBL,IAAuBA,EAAOC,EAAMC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nconst { delay, step, amount } = formRef.elements;\n\nlet promiseCounter = 1;\nlet delayCounter = 0;\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const delayRef = Number(delay.value);\n  const stepRef = Number(step.value);\n  const amountRef = Number(amount.value);\n  delayCounter = delayRef;\n  trackPromises(delayRef, stepRef, amountRef);\n}\n\nfunction trackPromises(delay, step, amount) {\n  setTimeout(() => {\n    if (amount === 0) {\n      return;\n    }\n    createPromise(promiseCounter, delayCounter);\n\n    const intervalId = setInterval(() => {\n      if (promiseCounter === amount) {\n        clearInterval(intervalId);\n        promiseCounter = 1;\n        delayCounter = 0;\n        return;\n      }\n      promiseCounter += 1;\n      delayCounter += step;\n      createPromise(promiseCounter, delayCounter);\n    }, step);\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n  processPromise(promise);\n}\n\nfunction processPromise(promise) {\n  promise\n    .then(({ position, delay }) =>\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n        timeout: 3000,\n      })\n    )\n    .catch(({ position, delay }) =>\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n        timeout: 3000,\n      })\n    );\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","elements","$47d4ff9957288465$var$promiseCounter","$47d4ff9957288465$var$delayCounter","$47d4ff9957288465$var$createPromise","position","delay2","shouldResolve","Math","random","promise","then","delay3","$parcel$interopDefault","Notify","success","timeout","catch","delay4","failure","$47d4ff9957288465$var$processPromise","Promise","resolve","reject","addEventListener","evt","preventDefault","delayRef","Number","value","stepRef","amountRef","delay1","step1","amount1","setTimeout","intervalId","setInterval","clearInterval"],"version":3,"file":"03-promises.0c1d6a0e.js.map"}